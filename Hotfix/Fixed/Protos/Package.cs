// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Package.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using scg = global::System.Collections.Generic;
namespace Logic.Hotfix.Fixed.Pbf {

  #region Messages
  /// <summary>
  /// https://www.zhihu.com/pin/1612126921554280448
  /// </summary>
  public sealed class PackageHeader : pb::IMessage {
    private static readonly pb::MessageParser<PackageHeader> _parser = new pb::MessageParser<PackageHeader>(() => new PackageHeader());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PackageHeader> Parser { get { return _parser; } }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "bufferSize" field.</summary>
    public const int BufferSizeFieldNumber = 2;
    private uint bufferSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint BufferSize {
      get { return bufferSize_; }
      set {
        bufferSize_ = value;
      }
    }

    /// <summary>Field number for the "splitIndex" field.</summary>
    public const int SplitIndexFieldNumber = 3;
    private bool splitIndex_;
    /// <summary>
    /// 如果为0，也就是默认值，表示没有超过uint32.MaxValue，否则就是从1开始
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SplitIndex {
      get { return splitIndex_; }
      set {
        splitIndex_ = value;
      }
    }

    /// <summary>Field number for the "splitCount" field.</summary>
    public const int SplitCountFieldNumber = 4;
    private bool splitCount_;
    /// <summary>
    /// split的个数，正常情况下为0，也就是false，protobuf会将默认值的字段压缩
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SplitCount {
      get { return splitCount_; }
      set {
        splitCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (BufferSize != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(BufferSize);
      }
      if (SplitIndex != false) {
        output.WriteRawTag(24);
        output.WriteBool(SplitIndex);
      }
      if (SplitCount != false) {
        output.WriteRawTag(32);
        output.WriteBool(SplitCount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (BufferSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BufferSize);
      }
      if (SplitIndex != false) {
        size += 1 + 1;
      }
      if (SplitCount != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            BufferSize = input.ReadUInt32();
            break;
          }
          case 24: {
            SplitIndex = input.ReadBool();
            break;
          }
          case 32: {
            SplitCount = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
