// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Package.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using scg = global::System.Collections.Generic;
namespace Logic.Hotfix.Fixed.Pbf {

  #region Messages
  public sealed class PackageSplit : pb::IMessage {
    private static readonly pb::MessageParser<PackageSplit> _parser = new pb::MessageParser<PackageSplit>(() => new PackageSplit());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PackageSplit> Parser { get { return _parser; } }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 1;
    private bool index_;
    /// <summary>
    /// 如果为0，也就是默认值，表示没有超过uint32.MaxValue，否则就是从1开始
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private bool count_;
    /// <summary>
    /// split的个数，正常情况下为0，也就是false，protobuf会将默认值的字段压缩
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Index != false) {
        output.WriteRawTag(8);
        output.WriteBool(Index);
      }
      if (Count != false) {
        output.WriteRawTag(16);
        output.WriteBool(Count);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Index != false) {
        size += 1 + 1;
      }
      if (Count != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Index = input.ReadBool();
            break;
          }
          case 16: {
            Count = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
