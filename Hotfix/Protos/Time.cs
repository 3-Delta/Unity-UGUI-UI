// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Time.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Logic.Pbf {

  /// <summary>Holder for reflection information generated from Time.proto</summary>
  public static partial class TimeReflection {

    #region Descriptor
    /// <summary>File descriptor for Time.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TimeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpUaW1lLnByb3RvEglMb2dpYy5wYmYiOQoJU0NUaW1lTnRmEhMKC3RpbWVT",
            "ZWNvbmRzGAEgASgNEhcKD3RpbWVab25lU2Vjb25kcxgCIAEoBWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Logic.Pbf.SCTimeNtf), global::Logic.Pbf.SCTimeNtf.Parser, new[]{ "TimeSeconds", "TimeZoneSeconds" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SCTimeNtf : pb::IMessage<SCTimeNtf> {
    private static readonly pb::MessageParser<SCTimeNtf> _parser = new pb::MessageParser<SCTimeNtf>(() => new SCTimeNtf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCTimeNtf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Logic.Pbf.TimeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTimeNtf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTimeNtf(SCTimeNtf other) : this() {
      timeSeconds_ = other.timeSeconds_;
      timeZoneSeconds_ = other.timeZoneSeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCTimeNtf Clone() {
      return new SCTimeNtf(this);
    }

    /// <summary>Field number for the "timeSeconds" field.</summary>
    public const int TimeSecondsFieldNumber = 1;
    private uint timeSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TimeSeconds {
      get { return timeSeconds_; }
      set {
        timeSeconds_ = value;
      }
    }

    /// <summary>Field number for the "timeZoneSeconds" field.</summary>
    public const int TimeZoneSecondsFieldNumber = 2;
    private int timeZoneSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TimeZoneSeconds {
      get { return timeZoneSeconds_; }
      set {
        timeZoneSeconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCTimeNtf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCTimeNtf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TimeSeconds != other.TimeSeconds) return false;
      if (TimeZoneSeconds != other.TimeZoneSeconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TimeSeconds != 0) hash ^= TimeSeconds.GetHashCode();
      if (TimeZoneSeconds != 0) hash ^= TimeZoneSeconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TimeSeconds != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(TimeSeconds);
      }
      if (TimeZoneSeconds != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TimeZoneSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TimeSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeSeconds);
      }
      if (TimeZoneSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimeZoneSeconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCTimeNtf other) {
      if (other == null) {
        return;
      }
      if (other.TimeSeconds != 0) {
        TimeSeconds = other.TimeSeconds;
      }
      if (other.TimeZoneSeconds != 0) {
        TimeZoneSeconds = other.TimeZoneSeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TimeSeconds = input.ReadUInt32();
            break;
          }
          case 16: {
            TimeZoneSeconds = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
