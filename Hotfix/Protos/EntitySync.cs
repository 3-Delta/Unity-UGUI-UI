// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: EntitySync.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Logic.Pbf {

  /// <summary>Holder for reflection information generated from EntitySync.proto</summary>
  public static partial class EntitySyncReflection {

    #region Descriptor
    /// <summary>File descriptor for EntitySync.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EntitySyncReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBFbnRpdHlTeW5jLnByb3RvEglMb2dpYy5wYmYaDENvbW1vbi5wcm90byIU",
            "CgZUeXBlSUQSCgoCaWQYAiABKA0ihQIKBkVudGl0eRIoCgZzdGF0dXMYASAB",
            "KA4yGC5Mb2dpYy5wYmYuRUVudGl0eVN0YXR1cxIpCghwb3NpdGlvbhgCIAEo",
            "CzIXLkxvZ2ljLnBiZi5GbG9hdFZlY3RvcjMSKQoIcm90YXRpb24YAyABKAsy",
            "Fy5Mb2dpYy5wYmYuRmxvYXRWZWN0b3IzEiYKBXNjYWxlGAQgASgLMhcuTG9n",
            "aWMucGJmLkZsb2F0VmVjdG9yMxImCgVzcGVlZBgFIAEoCzIXLkxvZ2ljLnBi",
            "Zi5GbG9hdFZlY3RvcjMSKwoKYWNjZWxlcmF0ZRgGIAEoCzIXLkxvZ2ljLnBi",
            "Zi5GbG9hdFZlY3RvcjMiNgoJT3BDb21tYW5kEhoKAm9wGAEgASgOMg4uTG9n",
            "aWMucGJmLkVPcBINCgVwYXJhbRgCIAEoBSIwCgtDU0FkZEVudGl0eRIhCgZ0",
            "eXBlSUQYASABKAsyES5Mb2dpYy5wYmYuVHlwZUlEIj8KC1NDQWRkRW50aXR5",
            "EiEKBnR5cGVJRBgBIAEoCzIRLkxvZ2ljLnBiZi5UeXBlSUQSDQoFY3N2SUQY",
            "AiABKA0iMwoOQ1NSZW1vdmVFbnRpdHkSIQoGdHlwZUlEGAEgASgLMhEuTG9n",
            "aWMucGJmLlR5cGVJRCIzCg5TQ1JlbW92ZUVudGl0eRIhCgZ0eXBlSUQYASAB",
            "KAsyES5Mb2dpYy5wYmYuVHlwZUlEIjMKDkNTVXBkYXRlRW50aXR5EiEKBnR5",
            "cGVJRBgBIAEoCzIRLkxvZ2ljLnBiZi5UeXBlSUQiVgoOU0NVcGRhdGVFbnRp",
            "dHkSIQoGdHlwZUlEGAEgASgLMhEuTG9naWMucGJmLlR5cGVJRBIhCgZlbnRp",
            "dHkYAiABKAsyES5Mb2dpYy5wYmYuRW50aXR5InQKCkNTT3BFbnRpdHkSIQoG",
            "dHlwZUlEGAEgASgLMhEuTG9naWMucGJmLlR5cGVJRBIgCgJvcBgCIAEoCzIU",
            "LkxvZ2ljLnBiZi5PcENvbW1hbmQSIQoGZW50aXR5GAMgASgLMhEuTG9naWMu",
            "cGJmLkVudGl0eSIzCgpTQ09wRW50aXR5EiUKAm9wGAEgASgLMhkuTG9naWMu",
            "cGJmLlNDVXBkYXRlRW50aXR5IkIKCEluaXRUaW1lEiQKBHRpbWUYASABKAsy",
            "Fi5Mb2dpYy5wYmYuUmVmcmVzaFRpbWUSEAoIdGltZVpvbmUYAiABKAIiGwoL",
            "UmVmcmVzaFRpbWUSDAoEdGltZRgBIAEoBCJCCg9CYXR0bGVPcENvbW1hbmQS",
            "IAoCb3AYASABKA4yFC5Mb2dpYy5wYmYuRUJhdHRsZU9wEg0KBXBhcmFtGAIg",
            "ASgFIjwKCEJhdHRsZU9wEg0KBWZyYW1lGAEgASgNEiEKA29wcxgCIAMoCzIU",
            "LkxvZ2ljLnBiZi5PcENvbW1hbmQqOAoNRUVudGl0eVN0YXR1cxIICgRJZGxl",
            "EAASCAoEV2FsaxABEgcKA1J1bhACEgoKBkNvbGVjdBADKikKC0VLZXlib2Fy",
            "ZE9wEgUKAVcQABIFCgFBEAESBQoBUxACEgUKAUQQAyoOCgNFT3ASBwoDT3BB",
            "EAAqFQoJRUJhdHRsZU9wEggKBEJPcEEQAGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Logic.Pbf.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Logic.Pbf.EEntityStatus), typeof(global::Logic.Pbf.EKeyboardOp), typeof(global::Logic.Pbf.EOp), typeof(global::Logic.Pbf.EBattleOp), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Logic.Pbf.TypeID), global::Logic.Pbf.TypeID.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Logic.Pbf.Entity), global::Logic.Pbf.Entity.Parser, new[]{ "Status", "Position", "Rotation", "Scale", "Speed", "Accelerate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Logic.Pbf.OpCommand), global::Logic.Pbf.OpCommand.Parser, new[]{ "Op", "Param" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Logic.Pbf.CSAddEntity), global::Logic.Pbf.CSAddEntity.Parser, new[]{ "TypeID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Logic.Pbf.SCAddEntity), global::Logic.Pbf.SCAddEntity.Parser, new[]{ "TypeID", "CsvID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Logic.Pbf.CSRemoveEntity), global::Logic.Pbf.CSRemoveEntity.Parser, new[]{ "TypeID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Logic.Pbf.SCRemoveEntity), global::Logic.Pbf.SCRemoveEntity.Parser, new[]{ "TypeID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Logic.Pbf.CSUpdateEntity), global::Logic.Pbf.CSUpdateEntity.Parser, new[]{ "TypeID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Logic.Pbf.SCUpdateEntity), global::Logic.Pbf.SCUpdateEntity.Parser, new[]{ "TypeID", "Entity" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Logic.Pbf.CSOpEntity), global::Logic.Pbf.CSOpEntity.Parser, new[]{ "TypeID", "Op", "Entity" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Logic.Pbf.SCOpEntity), global::Logic.Pbf.SCOpEntity.Parser, new[]{ "Op" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Logic.Pbf.InitTime), global::Logic.Pbf.InitTime.Parser, new[]{ "Time", "TimeZone" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Logic.Pbf.RefreshTime), global::Logic.Pbf.RefreshTime.Parser, new[]{ "Time" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Logic.Pbf.BattleOpCommand), global::Logic.Pbf.BattleOpCommand.Parser, new[]{ "Op", "Param" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Logic.Pbf.BattleOp), global::Logic.Pbf.BattleOp.Parser, new[]{ "Frame", "Ops" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum EEntityStatus {
    [pbr::OriginalName("Idle")] Idle = 0,
    [pbr::OriginalName("Walk")] Walk = 1,
    [pbr::OriginalName("Run")] Run = 2,
    [pbr::OriginalName("Colect")] Colect = 3,
  }

  public enum EKeyboardOp {
    [pbr::OriginalName("W")] W = 0,
    [pbr::OriginalName("A")] A = 1,
    [pbr::OriginalName("S")] S = 2,
    [pbr::OriginalName("D")] D = 3,
  }

  public enum EOp {
    [pbr::OriginalName("OpA")] OpA = 0,
  }

  public enum EBattleOp {
    [pbr::OriginalName("BOpA")] BopA = 0,
  }

  #endregion

  #region Messages
  public sealed partial class TypeID : pb::IMessage<TypeID> {
    private static readonly pb::MessageParser<TypeID> _parser = new pb::MessageParser<TypeID>(() => new TypeID());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TypeID> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Logic.Pbf.EntitySyncReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeID() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeID(TypeID other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeID Clone() {
      return new TypeID(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private uint id_;
    /// <summary>
    /// id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TypeID);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TypeID other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TypeID other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            Id = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Entity : pb::IMessage<Entity> {
    private static readonly pb::MessageParser<Entity> _parser = new pb::MessageParser<Entity>(() => new Entity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Entity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Logic.Pbf.EntitySyncReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Entity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Entity(Entity other) : this() {
      status_ = other.status_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      rotation_ = other.rotation_ != null ? other.rotation_.Clone() : null;
      scale_ = other.scale_ != null ? other.scale_.Clone() : null;
      speed_ = other.speed_ != null ? other.speed_.Clone() : null;
      accelerate_ = other.accelerate_ != null ? other.accelerate_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Entity Clone() {
      return new Entity(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Logic.Pbf.EEntityStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Logic.Pbf.EEntityStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 2;
    private global::Logic.Pbf.FloatVector3 position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Logic.Pbf.FloatVector3 Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "rotation" field.</summary>
    public const int RotationFieldNumber = 3;
    private global::Logic.Pbf.FloatVector3 rotation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Logic.Pbf.FloatVector3 Rotation {
      get { return rotation_; }
      set {
        rotation_ = value;
      }
    }

    /// <summary>Field number for the "scale" field.</summary>
    public const int ScaleFieldNumber = 4;
    private global::Logic.Pbf.FloatVector3 scale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Logic.Pbf.FloatVector3 Scale {
      get { return scale_; }
      set {
        scale_ = value;
      }
    }

    /// <summary>Field number for the "speed" field.</summary>
    public const int SpeedFieldNumber = 5;
    private global::Logic.Pbf.FloatVector3 speed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Logic.Pbf.FloatVector3 Speed {
      get { return speed_; }
      set {
        speed_ = value;
      }
    }

    /// <summary>Field number for the "accelerate" field.</summary>
    public const int AccelerateFieldNumber = 6;
    private global::Logic.Pbf.FloatVector3 accelerate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Logic.Pbf.FloatVector3 Accelerate {
      get { return accelerate_; }
      set {
        accelerate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Entity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Entity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(Rotation, other.Rotation)) return false;
      if (!object.Equals(Scale, other.Scale)) return false;
      if (!object.Equals(Speed, other.Speed)) return false;
      if (!object.Equals(Accelerate, other.Accelerate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (rotation_ != null) hash ^= Rotation.GetHashCode();
      if (scale_ != null) hash ^= Scale.GetHashCode();
      if (speed_ != null) hash ^= Speed.GetHashCode();
      if (accelerate_ != null) hash ^= Accelerate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (position_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Position);
      }
      if (rotation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Rotation);
      }
      if (scale_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Scale);
      }
      if (speed_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Speed);
      }
      if (accelerate_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Accelerate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (rotation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rotation);
      }
      if (scale_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scale);
      }
      if (speed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Speed);
      }
      if (accelerate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Accelerate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Entity other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          position_ = new global::Logic.Pbf.FloatVector3();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.rotation_ != null) {
        if (rotation_ == null) {
          rotation_ = new global::Logic.Pbf.FloatVector3();
        }
        Rotation.MergeFrom(other.Rotation);
      }
      if (other.scale_ != null) {
        if (scale_ == null) {
          scale_ = new global::Logic.Pbf.FloatVector3();
        }
        Scale.MergeFrom(other.Scale);
      }
      if (other.speed_ != null) {
        if (speed_ == null) {
          speed_ = new global::Logic.Pbf.FloatVector3();
        }
        Speed.MergeFrom(other.Speed);
      }
      if (other.accelerate_ != null) {
        if (accelerate_ == null) {
          accelerate_ = new global::Logic.Pbf.FloatVector3();
        }
        Accelerate.MergeFrom(other.Accelerate);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            status_ = (global::Logic.Pbf.EEntityStatus) input.ReadEnum();
            break;
          }
          case 18: {
            if (position_ == null) {
              position_ = new global::Logic.Pbf.FloatVector3();
            }
            input.ReadMessage(position_);
            break;
          }
          case 26: {
            if (rotation_ == null) {
              rotation_ = new global::Logic.Pbf.FloatVector3();
            }
            input.ReadMessage(rotation_);
            break;
          }
          case 34: {
            if (scale_ == null) {
              scale_ = new global::Logic.Pbf.FloatVector3();
            }
            input.ReadMessage(scale_);
            break;
          }
          case 42: {
            if (speed_ == null) {
              speed_ = new global::Logic.Pbf.FloatVector3();
            }
            input.ReadMessage(speed_);
            break;
          }
          case 50: {
            if (accelerate_ == null) {
              accelerate_ = new global::Logic.Pbf.FloatVector3();
            }
            input.ReadMessage(accelerate_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OpCommand : pb::IMessage<OpCommand> {
    private static readonly pb::MessageParser<OpCommand> _parser = new pb::MessageParser<OpCommand>(() => new OpCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OpCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Logic.Pbf.EntitySyncReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpCommand(OpCommand other) : this() {
      op_ = other.op_;
      param_ = other.param_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpCommand Clone() {
      return new OpCommand(this);
    }

    /// <summary>Field number for the "op" field.</summary>
    public const int OpFieldNumber = 1;
    private global::Logic.Pbf.EOp op_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Logic.Pbf.EOp Op {
      get { return op_; }
      set {
        op_ = value;
      }
    }

    /// <summary>Field number for the "param" field.</summary>
    public const int ParamFieldNumber = 2;
    private int param_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Param {
      get { return param_; }
      set {
        param_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OpCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OpCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Op != other.Op) return false;
      if (Param != other.Param) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Op != 0) hash ^= Op.GetHashCode();
      if (Param != 0) hash ^= Param.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Op != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Op);
      }
      if (Param != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Param);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Op != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Op);
      }
      if (Param != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Param);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OpCommand other) {
      if (other == null) {
        return;
      }
      if (other.Op != 0) {
        Op = other.Op;
      }
      if (other.Param != 0) {
        Param = other.Param;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            op_ = (global::Logic.Pbf.EOp) input.ReadEnum();
            break;
          }
          case 16: {
            Param = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CSAddEntity : pb::IMessage<CSAddEntity> {
    private static readonly pb::MessageParser<CSAddEntity> _parser = new pb::MessageParser<CSAddEntity>(() => new CSAddEntity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSAddEntity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Logic.Pbf.EntitySyncReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSAddEntity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSAddEntity(CSAddEntity other) : this() {
      typeID_ = other.typeID_ != null ? other.typeID_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSAddEntity Clone() {
      return new CSAddEntity(this);
    }

    /// <summary>Field number for the "typeID" field.</summary>
    public const int TypeIDFieldNumber = 1;
    private global::Logic.Pbf.TypeID typeID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Logic.Pbf.TypeID TypeID {
      get { return typeID_; }
      set {
        typeID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSAddEntity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSAddEntity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TypeID, other.TypeID)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeID_ != null) hash ^= TypeID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (typeID_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TypeID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeID_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TypeID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSAddEntity other) {
      if (other == null) {
        return;
      }
      if (other.typeID_ != null) {
        if (typeID_ == null) {
          typeID_ = new global::Logic.Pbf.TypeID();
        }
        TypeID.MergeFrom(other.TypeID);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (typeID_ == null) {
              typeID_ = new global::Logic.Pbf.TypeID();
            }
            input.ReadMessage(typeID_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SCAddEntity : pb::IMessage<SCAddEntity> {
    private static readonly pb::MessageParser<SCAddEntity> _parser = new pb::MessageParser<SCAddEntity>(() => new SCAddEntity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCAddEntity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Logic.Pbf.EntitySyncReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCAddEntity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCAddEntity(SCAddEntity other) : this() {
      typeID_ = other.typeID_ != null ? other.typeID_.Clone() : null;
      csvID_ = other.csvID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCAddEntity Clone() {
      return new SCAddEntity(this);
    }

    /// <summary>Field number for the "typeID" field.</summary>
    public const int TypeIDFieldNumber = 1;
    private global::Logic.Pbf.TypeID typeID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Logic.Pbf.TypeID TypeID {
      get { return typeID_; }
      set {
        typeID_ = value;
      }
    }

    /// <summary>Field number for the "csvID" field.</summary>
    public const int CsvIDFieldNumber = 2;
    private uint csvID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CsvID {
      get { return csvID_; }
      set {
        csvID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCAddEntity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCAddEntity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TypeID, other.TypeID)) return false;
      if (CsvID != other.CsvID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeID_ != null) hash ^= TypeID.GetHashCode();
      if (CsvID != 0) hash ^= CsvID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (typeID_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TypeID);
      }
      if (CsvID != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(CsvID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeID_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TypeID);
      }
      if (CsvID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CsvID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCAddEntity other) {
      if (other == null) {
        return;
      }
      if (other.typeID_ != null) {
        if (typeID_ == null) {
          typeID_ = new global::Logic.Pbf.TypeID();
        }
        TypeID.MergeFrom(other.TypeID);
      }
      if (other.CsvID != 0) {
        CsvID = other.CsvID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (typeID_ == null) {
              typeID_ = new global::Logic.Pbf.TypeID();
            }
            input.ReadMessage(typeID_);
            break;
          }
          case 16: {
            CsvID = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CSRemoveEntity : pb::IMessage<CSRemoveEntity> {
    private static readonly pb::MessageParser<CSRemoveEntity> _parser = new pb::MessageParser<CSRemoveEntity>(() => new CSRemoveEntity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSRemoveEntity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Logic.Pbf.EntitySyncReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSRemoveEntity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSRemoveEntity(CSRemoveEntity other) : this() {
      typeID_ = other.typeID_ != null ? other.typeID_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSRemoveEntity Clone() {
      return new CSRemoveEntity(this);
    }

    /// <summary>Field number for the "typeID" field.</summary>
    public const int TypeIDFieldNumber = 1;
    private global::Logic.Pbf.TypeID typeID_;
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Logic.Pbf.TypeID TypeID {
      get { return typeID_; }
      set {
        typeID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSRemoveEntity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSRemoveEntity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TypeID, other.TypeID)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeID_ != null) hash ^= TypeID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (typeID_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TypeID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeID_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TypeID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSRemoveEntity other) {
      if (other == null) {
        return;
      }
      if (other.typeID_ != null) {
        if (typeID_ == null) {
          typeID_ = new global::Logic.Pbf.TypeID();
        }
        TypeID.MergeFrom(other.TypeID);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (typeID_ == null) {
              typeID_ = new global::Logic.Pbf.TypeID();
            }
            input.ReadMessage(typeID_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SCRemoveEntity : pb::IMessage<SCRemoveEntity> {
    private static readonly pb::MessageParser<SCRemoveEntity> _parser = new pb::MessageParser<SCRemoveEntity>(() => new SCRemoveEntity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCRemoveEntity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Logic.Pbf.EntitySyncReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRemoveEntity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRemoveEntity(SCRemoveEntity other) : this() {
      typeID_ = other.typeID_ != null ? other.typeID_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCRemoveEntity Clone() {
      return new SCRemoveEntity(this);
    }

    /// <summary>Field number for the "typeID" field.</summary>
    public const int TypeIDFieldNumber = 1;
    private global::Logic.Pbf.TypeID typeID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Logic.Pbf.TypeID TypeID {
      get { return typeID_; }
      set {
        typeID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCRemoveEntity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCRemoveEntity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TypeID, other.TypeID)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeID_ != null) hash ^= TypeID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (typeID_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TypeID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeID_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TypeID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCRemoveEntity other) {
      if (other == null) {
        return;
      }
      if (other.typeID_ != null) {
        if (typeID_ == null) {
          typeID_ = new global::Logic.Pbf.TypeID();
        }
        TypeID.MergeFrom(other.TypeID);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (typeID_ == null) {
              typeID_ = new global::Logic.Pbf.TypeID();
            }
            input.ReadMessage(typeID_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CSUpdateEntity : pb::IMessage<CSUpdateEntity> {
    private static readonly pb::MessageParser<CSUpdateEntity> _parser = new pb::MessageParser<CSUpdateEntity>(() => new CSUpdateEntity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSUpdateEntity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Logic.Pbf.EntitySyncReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUpdateEntity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUpdateEntity(CSUpdateEntity other) : this() {
      typeID_ = other.typeID_ != null ? other.typeID_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSUpdateEntity Clone() {
      return new CSUpdateEntity(this);
    }

    /// <summary>Field number for the "typeID" field.</summary>
    public const int TypeIDFieldNumber = 1;
    private global::Logic.Pbf.TypeID typeID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Logic.Pbf.TypeID TypeID {
      get { return typeID_; }
      set {
        typeID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSUpdateEntity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSUpdateEntity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TypeID, other.TypeID)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeID_ != null) hash ^= TypeID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (typeID_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TypeID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeID_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TypeID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSUpdateEntity other) {
      if (other == null) {
        return;
      }
      if (other.typeID_ != null) {
        if (typeID_ == null) {
          typeID_ = new global::Logic.Pbf.TypeID();
        }
        TypeID.MergeFrom(other.TypeID);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (typeID_ == null) {
              typeID_ = new global::Logic.Pbf.TypeID();
            }
            input.ReadMessage(typeID_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SCUpdateEntity : pb::IMessage<SCUpdateEntity> {
    private static readonly pb::MessageParser<SCUpdateEntity> _parser = new pb::MessageParser<SCUpdateEntity>(() => new SCUpdateEntity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCUpdateEntity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Logic.Pbf.EntitySyncReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUpdateEntity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUpdateEntity(SCUpdateEntity other) : this() {
      typeID_ = other.typeID_ != null ? other.typeID_.Clone() : null;
      entity_ = other.entity_ != null ? other.entity_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCUpdateEntity Clone() {
      return new SCUpdateEntity(this);
    }

    /// <summary>Field number for the "typeID" field.</summary>
    public const int TypeIDFieldNumber = 1;
    private global::Logic.Pbf.TypeID typeID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Logic.Pbf.TypeID TypeID {
      get { return typeID_; }
      set {
        typeID_ = value;
      }
    }

    /// <summary>Field number for the "entity" field.</summary>
    public const int EntityFieldNumber = 2;
    private global::Logic.Pbf.Entity entity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Logic.Pbf.Entity Entity {
      get { return entity_; }
      set {
        entity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCUpdateEntity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCUpdateEntity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TypeID, other.TypeID)) return false;
      if (!object.Equals(Entity, other.Entity)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeID_ != null) hash ^= TypeID.GetHashCode();
      if (entity_ != null) hash ^= Entity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (typeID_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TypeID);
      }
      if (entity_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Entity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeID_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TypeID);
      }
      if (entity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Entity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCUpdateEntity other) {
      if (other == null) {
        return;
      }
      if (other.typeID_ != null) {
        if (typeID_ == null) {
          typeID_ = new global::Logic.Pbf.TypeID();
        }
        TypeID.MergeFrom(other.TypeID);
      }
      if (other.entity_ != null) {
        if (entity_ == null) {
          entity_ = new global::Logic.Pbf.Entity();
        }
        Entity.MergeFrom(other.Entity);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (typeID_ == null) {
              typeID_ = new global::Logic.Pbf.TypeID();
            }
            input.ReadMessage(typeID_);
            break;
          }
          case 18: {
            if (entity_ == null) {
              entity_ = new global::Logic.Pbf.Entity();
            }
            input.ReadMessage(entity_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CSOpEntity : pb::IMessage<CSOpEntity> {
    private static readonly pb::MessageParser<CSOpEntity> _parser = new pb::MessageParser<CSOpEntity>(() => new CSOpEntity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CSOpEntity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Logic.Pbf.EntitySyncReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSOpEntity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSOpEntity(CSOpEntity other) : this() {
      typeID_ = other.typeID_ != null ? other.typeID_.Clone() : null;
      op_ = other.op_ != null ? other.op_.Clone() : null;
      entity_ = other.entity_ != null ? other.entity_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CSOpEntity Clone() {
      return new CSOpEntity(this);
    }

    /// <summary>Field number for the "typeID" field.</summary>
    public const int TypeIDFieldNumber = 1;
    private global::Logic.Pbf.TypeID typeID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Logic.Pbf.TypeID TypeID {
      get { return typeID_; }
      set {
        typeID_ = value;
      }
    }

    /// <summary>Field number for the "op" field.</summary>
    public const int OpFieldNumber = 2;
    private global::Logic.Pbf.OpCommand op_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Logic.Pbf.OpCommand Op {
      get { return op_; }
      set {
        op_ = value;
      }
    }

    /// <summary>Field number for the "entity" field.</summary>
    public const int EntityFieldNumber = 3;
    private global::Logic.Pbf.Entity entity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Logic.Pbf.Entity Entity {
      get { return entity_; }
      set {
        entity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CSOpEntity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CSOpEntity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TypeID, other.TypeID)) return false;
      if (!object.Equals(Op, other.Op)) return false;
      if (!object.Equals(Entity, other.Entity)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeID_ != null) hash ^= TypeID.GetHashCode();
      if (op_ != null) hash ^= Op.GetHashCode();
      if (entity_ != null) hash ^= Entity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (typeID_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TypeID);
      }
      if (op_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Op);
      }
      if (entity_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Entity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeID_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TypeID);
      }
      if (op_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Op);
      }
      if (entity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Entity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CSOpEntity other) {
      if (other == null) {
        return;
      }
      if (other.typeID_ != null) {
        if (typeID_ == null) {
          typeID_ = new global::Logic.Pbf.TypeID();
        }
        TypeID.MergeFrom(other.TypeID);
      }
      if (other.op_ != null) {
        if (op_ == null) {
          op_ = new global::Logic.Pbf.OpCommand();
        }
        Op.MergeFrom(other.Op);
      }
      if (other.entity_ != null) {
        if (entity_ == null) {
          entity_ = new global::Logic.Pbf.Entity();
        }
        Entity.MergeFrom(other.Entity);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (typeID_ == null) {
              typeID_ = new global::Logic.Pbf.TypeID();
            }
            input.ReadMessage(typeID_);
            break;
          }
          case 18: {
            if (op_ == null) {
              op_ = new global::Logic.Pbf.OpCommand();
            }
            input.ReadMessage(op_);
            break;
          }
          case 26: {
            if (entity_ == null) {
              entity_ = new global::Logic.Pbf.Entity();
            }
            input.ReadMessage(entity_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SCOpEntity : pb::IMessage<SCOpEntity> {
    private static readonly pb::MessageParser<SCOpEntity> _parser = new pb::MessageParser<SCOpEntity>(() => new SCOpEntity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SCOpEntity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Logic.Pbf.EntitySyncReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCOpEntity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCOpEntity(SCOpEntity other) : this() {
      op_ = other.op_ != null ? other.op_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SCOpEntity Clone() {
      return new SCOpEntity(this);
    }

    /// <summary>Field number for the "op" field.</summary>
    public const int OpFieldNumber = 1;
    private global::Logic.Pbf.SCUpdateEntity op_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Logic.Pbf.SCUpdateEntity Op {
      get { return op_; }
      set {
        op_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SCOpEntity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SCOpEntity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Op, other.Op)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (op_ != null) hash ^= Op.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (op_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Op);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (op_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Op);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SCOpEntity other) {
      if (other == null) {
        return;
      }
      if (other.op_ != null) {
        if (op_ == null) {
          op_ = new global::Logic.Pbf.SCUpdateEntity();
        }
        Op.MergeFrom(other.Op);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (op_ == null) {
              op_ = new global::Logic.Pbf.SCUpdateEntity();
            }
            input.ReadMessage(op_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class InitTime : pb::IMessage<InitTime> {
    private static readonly pb::MessageParser<InitTime> _parser = new pb::MessageParser<InitTime>(() => new InitTime());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InitTime> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Logic.Pbf.EntitySyncReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitTime() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitTime(InitTime other) : this() {
      time_ = other.time_ != null ? other.time_.Clone() : null;
      timeZone_ = other.timeZone_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitTime Clone() {
      return new InitTime(this);
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 1;
    private global::Logic.Pbf.RefreshTime time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Logic.Pbf.RefreshTime Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "timeZone" field.</summary>
    public const int TimeZoneFieldNumber = 2;
    private float timeZone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float TimeZone {
      get { return timeZone_; }
      set {
        timeZone_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InitTime);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InitTime other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Time, other.Time)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TimeZone, other.TimeZone)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (time_ != null) hash ^= Time.GetHashCode();
      if (TimeZone != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TimeZone);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (time_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Time);
      }
      if (TimeZone != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(TimeZone);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (time_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Time);
      }
      if (TimeZone != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InitTime other) {
      if (other == null) {
        return;
      }
      if (other.time_ != null) {
        if (time_ == null) {
          time_ = new global::Logic.Pbf.RefreshTime();
        }
        Time.MergeFrom(other.Time);
      }
      if (other.TimeZone != 0F) {
        TimeZone = other.TimeZone;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (time_ == null) {
              time_ = new global::Logic.Pbf.RefreshTime();
            }
            input.ReadMessage(time_);
            break;
          }
          case 21: {
            TimeZone = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RefreshTime : pb::IMessage<RefreshTime> {
    private static readonly pb::MessageParser<RefreshTime> _parser = new pb::MessageParser<RefreshTime>(() => new RefreshTime());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RefreshTime> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Logic.Pbf.EntitySyncReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefreshTime() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefreshTime(RefreshTime other) : this() {
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefreshTime Clone() {
      return new RefreshTime(this);
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 1;
    private ulong time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RefreshTime);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RefreshTime other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Time != 0UL) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Time != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Time != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RefreshTime other) {
      if (other == null) {
        return;
      }
      if (other.Time != 0UL) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Time = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///客户端操作记录
  /// </summary>
  public sealed partial class BattleOpCommand : pb::IMessage<BattleOpCommand> {
    private static readonly pb::MessageParser<BattleOpCommand> _parser = new pb::MessageParser<BattleOpCommand>(() => new BattleOpCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BattleOpCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Logic.Pbf.EntitySyncReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleOpCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleOpCommand(BattleOpCommand other) : this() {
      op_ = other.op_;
      param_ = other.param_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleOpCommand Clone() {
      return new BattleOpCommand(this);
    }

    /// <summary>Field number for the "op" field.</summary>
    public const int OpFieldNumber = 1;
    private global::Logic.Pbf.EBattleOp op_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Logic.Pbf.EBattleOp Op {
      get { return op_; }
      set {
        op_ = value;
      }
    }

    /// <summary>Field number for the "param" field.</summary>
    public const int ParamFieldNumber = 2;
    private int param_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Param {
      get { return param_; }
      set {
        param_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BattleOpCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BattleOpCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Op != other.Op) return false;
      if (Param != other.Param) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Op != 0) hash ^= Op.GetHashCode();
      if (Param != 0) hash ^= Param.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Op != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Op);
      }
      if (Param != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Param);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Op != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Op);
      }
      if (Param != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Param);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BattleOpCommand other) {
      if (other == null) {
        return;
      }
      if (other.Op != 0) {
        Op = other.Op;
      }
      if (other.Param != 0) {
        Param = other.Param;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            op_ = (global::Logic.Pbf.EBattleOp) input.ReadEnum();
            break;
          }
          case 16: {
            Param = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BattleOp : pb::IMessage<BattleOp> {
    private static readonly pb::MessageParser<BattleOp> _parser = new pb::MessageParser<BattleOp>(() => new BattleOp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BattleOp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Logic.Pbf.EntitySyncReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleOp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleOp(BattleOp other) : this() {
      frame_ = other.frame_;
      ops_ = other.ops_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleOp Clone() {
      return new BattleOp(this);
    }

    /// <summary>Field number for the "frame" field.</summary>
    public const int FrameFieldNumber = 1;
    private uint frame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Frame {
      get { return frame_; }
      set {
        frame_ = value;
      }
    }

    /// <summary>Field number for the "ops" field.</summary>
    public const int OpsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Logic.Pbf.OpCommand> _repeated_ops_codec
        = pb::FieldCodec.ForMessage(18, global::Logic.Pbf.OpCommand.Parser);
    private readonly pbc::RepeatedField<global::Logic.Pbf.OpCommand> ops_ = new pbc::RepeatedField<global::Logic.Pbf.OpCommand>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Logic.Pbf.OpCommand> Ops {
      get { return ops_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BattleOp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BattleOp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Frame != other.Frame) return false;
      if(!ops_.Equals(other.ops_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Frame != 0) hash ^= Frame.GetHashCode();
      hash ^= ops_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Frame != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Frame);
      }
      ops_.WriteTo(output, _repeated_ops_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Frame != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Frame);
      }
      size += ops_.CalculateSize(_repeated_ops_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BattleOp other) {
      if (other == null) {
        return;
      }
      if (other.Frame != 0) {
        Frame = other.Frame;
      }
      ops_.Add(other.ops_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Frame = input.ReadUInt32();
            break;
          }
          case 18: {
            ops_.AddEntriesFrom(input, _repeated_ops_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
